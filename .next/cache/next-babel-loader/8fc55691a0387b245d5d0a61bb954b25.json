{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { fetch_activity } from '../actions/Activity';\nimport Activity from '../components/Activity/Activity';\n\nclass Index extends React.Component {\n  static async getInitialProps({\n    store,\n    req\n  }) {\n    // reduxStore.dispatch(serverRenderClock(isServer))\n    const isServer = !!req;\n    if (!!req) await store.dispatch(fetch_activity());\n    return {\n      isServer\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.isServer) this.props.fetchActivity();\n  } // componentWillUnmount() {\n  //   clearInterval(this.timer)\n  // }\n\n\n  render() {\n    //  console.log(this.props.activity)\n    return React.createElement(\"div\", null, React.createElement(Link, {\n      href: \"/activity-order/ActivityOrder\",\n      as: \"/activityOrder\"\n    }, React.createElement(\"h1\", null, \"Go to activity order\")), React.createElement(Activity, null));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    activity: state.activity\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchActivity: () => {\n      dispatch(fetch_activity());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["d:\\OJT\\nextjs-redux\\pages\\index.js"],"names":["React","connect","Link","fetch_activity","Activity","Index","Component","getInitialProps","store","req","isServer","dispatch","componentDidMount","props","fetchActivity","render","mapStateToProps","state","ownProps","activity","mapDispatchToProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,sCAAP;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClC,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA7B,EAA6C;AAC3C;AACA,UAAMC,QAAQ,GAAG,CAAC,CAACD,GAAnB;AACA,QAAI,CAAC,CAACA,GAAN,EAAW,MAAMD,KAAK,CAACG,QAAN,CAAeR,cAAc,EAA7B,CAAN;AACX,WAAO;AAAEO,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,QAAI,CAAC,KAAKC,KAAL,CAAWH,QAAhB,EAA0B,KAAKG,KAAL,CAAWC,aAAX;AAC3B,GAViC,CAYlC;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA,WACE,iCACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,+BAAX;AAA2C,MAAA,EAAE,EAAC;AAA9C,OACE,uDADF,CADF,EAIE,oBAAC,QAAD,OAJF,CADF;AAQD;;AA1BiC;;AA6BpC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGT,QAAQ,IAAI;AACrC,SAAO;AACLG,IAAAA,aAAa,EAAE,MAAM;AACnBH,MAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,OAAO,CACpBe,eADoB,EAEpBI,kBAFoB,CAAP,CAGbf,KAHa,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { fetch_activity } from '../actions/Activity'\r\nimport Activity from '../components/Activity/Activity'\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps({ store, req }) {\r\n    // reduxStore.dispatch(serverRenderClock(isServer))\r\n    const isServer = !!req\r\n    if (!!req) await store.dispatch(fetch_activity())\r\n    return { isServer }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isServer) this.props.fetchActivity()\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   clearInterval(this.timer)\r\n  // }\r\n\r\n  render() {\r\n    //  console.log(this.props.activity)\r\n    return (\r\n      <div>\r\n        <Link href=\"/activity-order/ActivityOrder\" as=\"/activityOrder\">\r\n          <h1>Go to activity order</h1>\r\n        </Link>\r\n        <Activity />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    activity: state.activity\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchActivity: () => {\r\n      dispatch(fetch_activity())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Index)\r\n"]},"metadata":{},"sourceType":"module"}