{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { fetch_activity } from '../actions/Activity';\nimport Activity from '../components/Activity/Activity';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.isServer) this.props.fetchActivity();\n    } // componentWillUnmount() {\n    //   clearInterval(this.timer)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  console.log(this.props.activity)\n      return React.createElement(\"div\", null, React.createElement(Link, {\n        href: \"/activity-order/ActivityOrder\",\n        as: \"/activityOrder\"\n      }, React.createElement(\"h1\", null, \"Go to activity order\")), React.createElement(Activity, null));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var store, req, isServer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                store = _ref.store, req = _ref.req;\n                // reduxStore.dispatch(serverRenderClock(isServer))\n                isServer = !!req;\n\n                if (!req) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 5;\n                return store.dispatch(fetch_activity());\n\n              case 5:\n                return _context.abrupt(\"return\", {\n                  isServer: isServer\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    activity: state.activity\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchActivity: function fetchActivity() {\n      dispatch(fetch_activity());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["d:\\OJT\\nextjs-redux\\pages\\index.js"],"names":["React","connect","Link","fetch_activity","Activity","Index","props","isServer","fetchActivity","store","req","dispatch","Component","mapStateToProps","state","ownProps","activity","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,sCAAP;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;;IAEMC,K;;;;;;;;;;;;;wCAQgB;AAClB,UAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B,KAAKD,KAAL,CAAWE,aAAX;AAC3B,K,CAED;AACA;AACA;;;;6BAES;AACP;AACA,aACE,iCACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,+BAAX;AAA2C,QAAA,EAAE,EAAC;AAA9C,SACE,uDADF,CADF,EAIE,oBAAC,QAAD,OAJF,CADF;AAQD;;;;;;;;;;;;AAzB8BC,gBAAAA,K,QAAAA,K,EAAOC,G,QAAAA,G;AACpC;AACMH,gBAAAA,Q,GAAW,CAAC,CAACG,G;;oBACd,CAACA,G;;;;;;uBAAWD,KAAK,CAACE,QAAN,CAAeR,cAAc,EAA7B,C;;;iDACV;AAAEI,kBAAAA,QAAQ,EAARA;AAAF,iB;;;;;;;;;;;;;;;;;;;EALSP,KAAK,CAACY,S;;AA6B1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLC,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AADX,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAN,QAAQ,EAAI;AACrC,SAAO;AACLH,IAAAA,aAAa,EAAE,yBAAM;AACnBG,MAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeF,OAAO,CACpBY,eADoB,EAEpBI,kBAFoB,CAAP,CAGbZ,KAHa,CAAf","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Link from 'next/link'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { fetch_activity } from '../actions/Activity'\r\nimport Activity from '../components/Activity/Activity'\r\n\r\nclass Index extends React.Component {\r\n  static async getInitialProps({ store, req }) {\r\n    // reduxStore.dispatch(serverRenderClock(isServer))\r\n    const isServer = !!req\r\n    if (!!req) await store.dispatch(fetch_activity())\r\n    return { isServer }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isServer) this.props.fetchActivity()\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  //   clearInterval(this.timer)\r\n  // }\r\n\r\n  render() {\r\n    //  console.log(this.props.activity)\r\n    return (\r\n      <div>\r\n        <Link href=\"/activity-order/ActivityOrder\" as=\"/activityOrder\">\r\n          <h1>Go to activity order</h1>\r\n        </Link>\r\n        <Activity />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    activity: state.activity\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchActivity: () => {\r\n      dispatch(fetch_activity())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Index)\r\n"]},"metadata":{},"sourceType":"module"}