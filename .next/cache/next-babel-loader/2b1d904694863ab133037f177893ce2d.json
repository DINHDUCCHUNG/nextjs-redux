{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\n\nvar graphql_middleware = function graphql_middleware(url) {\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        if (typeof action.payload === \"object\" && action.payload.query) {\n          // allow call normal action\n          next(action);\n          var headers = {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          };\n          if (localStorage.getItem(\"token\")) headers[\"token\"] = localStorage.getItem(\"token\");\n          fetch(\"\".concat(url, \"/graphql\"), {\n            method: \"POST\",\n            headers: headers,\n            body: _JSON$stringify({\n              query: action.payload.query,\n              variables: {\n                devteam: process.env.NODE_ENV === \"development\"\n              }\n            })\n          }).then(function (r) {\n            return r.json();\n          }).then(function (data) {\n            var result = data.data;\n\n            for (var key in result) {\n              if (result.hasOwnProperty(key)) {\n                if (result[key].success === false) {\n                  alert(result[key].messages);\n                  store.dispatch({\n                    type: [action.type, key.split(/(?=[A-Z])/).join(\"_\").toUpperCase(), \"FAIL\"].join(\"_\"),\n                    messages: result[key].messages,\n                    old_action: action\n                  });\n                } else store.dispatch({\n                  type: [action.type, key.split(/(?=[A-Z])/).join(\"_\").toUpperCase(), \"SUCCESS\"].join(\"_\"),\n                  messages: result[key].messages,\n                  data: result[key],\n                  old_action: action\n                });\n              }\n            }\n          })[\"catch\"](function (error) {\n            console.error(error);\n            store.dispatch({\n              type: action.type + \"_FAIL\",\n              old_action: action\n            });\n          });\n        } else {\n          next(action);\n        }\n      };\n    };\n  };\n};\n\nexport default graphql_middleware;","map":{"version":3,"sources":["/home/pilot/JS/with-redux-thunk-app/middlewares/graphql-middleware.js"],"names":["graphql_middleware","url","store","next","action","payload","query","headers","Accept","localStorage","getItem","fetch","method","body","variables","devteam","process","env","NODE_ENV","then","r","json","data","result","key","hasOwnProperty","success","alert","messages","dispatch","type","split","join","toUpperCase","old_action","error","console"],"mappings":"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","sourcesContent":["const graphql_middleware = url => {\n\treturn store => {\n\t\treturn next => {\n\t\t\treturn action => {\n\t\t\t\tif (typeof action.payload === \"object\" && action.payload.query) {\n\t\t\t\t\t// allow call normal action\n\t\t\t\t\tnext(action);\n\n\t\t\t\t\tlet headers = {\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\tAccept: \"application/json\"\n\t\t\t\t\t};\n\n\t\t\t\t\tif (localStorage.getItem(\"token\"))\n\t\t\t\t\t\theaders[\"token\"] = localStorage.getItem(\"token\");\n\n\t\t\t\t\tfetch(`${url}/graphql`, {\n\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\theaders,\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tquery: action.payload.query,\n\t\t\t\t\t\t\tvariables: { devteam: process.env.NODE_ENV === \"development\" }\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(r => r.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tconst result = data.data;\n\t\t\t\t\t\t\tfor (var key in result) {\n\t\t\t\t\t\t\t\tif (result.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\t\tif (result[key].success === false) {\n\t\t\t\t\t\t\t\t\t\talert(result[key].messages);\n\t\t\t\t\t\t\t\t\t\tstore.dispatch({\n\t\t\t\t\t\t\t\t\t\t\ttype: [\n\t\t\t\t\t\t\t\t\t\t\t\taction.type,\n\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.join(\"_\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toUpperCase(),\n\t\t\t\t\t\t\t\t\t\t\t\t\"FAIL\"\n\t\t\t\t\t\t\t\t\t\t\t].join(\"_\"),\n\t\t\t\t\t\t\t\t\t\t\tmessages: result[key].messages,\n\t\t\t\t\t\t\t\t\t\t\told_action: action\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\tstore.dispatch({\n\t\t\t\t\t\t\t\t\t\t\ttype: [\n\t\t\t\t\t\t\t\t\t\t\t\taction.type,\n\t\t\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t\t\t\t\t.split(/(?=[A-Z])/)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.join(\"_\")\n\t\t\t\t\t\t\t\t\t\t\t\t\t.toUpperCase(),\n\t\t\t\t\t\t\t\t\t\t\t\t\"SUCCESS\"\n\t\t\t\t\t\t\t\t\t\t\t].join(\"_\"),\n\t\t\t\t\t\t\t\t\t\t\tmessages: result[key].messages,\n\t\t\t\t\t\t\t\t\t\t\tdata: result[key],\n\t\t\t\t\t\t\t\t\t\t\told_action: action\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\tconsole.error(error);\n\n\t\t\t\t\t\t\tstore.dispatch({\n\t\t\t\t\t\t\t\ttype: action.type + \"_FAIL\",\n\t\t\t\t\t\t\t\told_action: action\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnext(action);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t};\n};\n\nexport default graphql_middleware;\n"]},"metadata":{},"sourceType":"module"}