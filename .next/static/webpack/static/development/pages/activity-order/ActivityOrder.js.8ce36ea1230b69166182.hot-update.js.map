{"version":3,"file":"static/webpack/static/development/pages/activity-order/ActivityOrder.js.8ce36ea1230b69166182.hot-update.js","sources":["webpack:///./components/ActivityOrder/ActivityOrderComponent.js"],"sourcesContent":["import { connect } from 'react-redux'\nimport { fetch_activity_order } from '../../actions/ActivityOrder'\nimport { useEffect, useState } from 'react'\nimport './ActivityOrder.scss'\n\nconst ActivityOrder = props => {\n  const [state, setState] = useState({ activityOrderCode: '' })\n\n  useEffect(() => {\n    props.fetchActivityOrder()\n  }, [])\n\n  useEffect(() => {\n    setState({\n      ...state,\n      activityOrderCode: props.activityOrder\n    })\n  }, [props.activityOrder])\n\n  return (\n    <div>\n      <div className=\"layout-content\">\n        <div className=\"container-fluid flex-grow-1 container-p-y\">\n          <div className=\"activity-order-code\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\" style={{ width: '70%' }}>\n                    Hoạt động\n                  </th>\n                  <th scope=\"col\" style={{ width: '30%' }}>\n                    Thời gian\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {state.activityOrderCode.map((act, index) => {\n                  return (\n                    <tr key={act.id}>\n                      <td>\n                        <span\n                          dangerouslySetInnerHTML={{\n                            __html: act.message\n                          }}\n                        />\n                      </td>\n                      <td>{moment(act.createdAt).format('hh:mm [ngày] LL')}</td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    activityOrderCode: state.activityOrder\n  }\n}\n\nconst mapDispatchToProps = dipatch => {\n  return {\n    fetchActivityOrder: () => {\n      dipatch(fetch_activity_order())\n    }\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ActivityOrder)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAQA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;A","sourceRoot":""}